// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SudokuAPI.Data;

namespace SudokuAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210922213347_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SudokuAPI.Models.Persistence.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Super Easy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Easy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Intermediate"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Hard"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Extreme"
                        });
                });

            modelBuilder.Entity("SudokuAPI.Models.Persistence.Sudoku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Board")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Sudokus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Board = "{BoardNumber:[[9, \"\", 4, 2, 8, 6, 1, 3, 5],[6, 2, 8, 3, 5, 1, 7, 4, 9],[3, 1, 5, 7, 9, 4, 6, 8, 2],[2, 5, 6, 9, 1, 8, 4, 7, 3],[4, 3, 9, 6, 7, 5, 2, 1, 8],[7, 8, 1, 4, 3, 2, 5, 9, 6],[5, 6, 7, 8, 4, 3, 9, 2, 1],[1, 4, 3, 5, 2, 9, 8, 6, 7],[8, 9, 2, 1, 6, 7, 3, 5, \"\"]]}",
                            CategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            Board = "{BoardNumber:[[5, 6, \"\", 1, \"\", 9, \"\", 7, 8],[4, \"\", \"\", 5, \"\", \"\", 3, \"\", 2],[2, 9, \"\", 3, \"\", \"\", \"\", 1, \"\"],[\"\", 4, 6, \"\", 8, 5, 9, 2, 3],[9, 5, 7, \"\", 3, \"\", \"\", 4, 1],[\"\", 3, \"\", 4, \"\", \"\", 7, \"\", \"\"],[\"\", 2, \"\", 8, 5, 7, \"\", \"\", \"\"],[\"\", \"\", \"\", \"\", 4, \"\", 6, \"\", \"\"],[3, \"\", 4, \"\", 1, \"\", 2, \"\", \"\"]]}",
                            CategoryId = 2
                        },
                        new
                        {
                            Id = 3,
                            Board = "{BoardNumber:[[1, 2, 3, \"\", \"\", \"\", \"\", 9, \"\"],[\"\", \"\", 7, 9, \"\", \"\", 4, \"\", 6],[\"\", 6, 4, \"\", 5, \"\", \"\", 7, \"\"],[7, \"\", 1, 8, \"\", \"\", 9, \"\", \"\"],[\"\", \"\", \"\", \"\", \"\", \"\", 6, 3, \"\"],[\"\", 8, \"\", \"\", 2, \"\", \"\", 4, \"\"],[5, \"\", \"\", 4, 6, 9, 3, \"\", \"\"],[4, \"\", \"\", \"\", 8, 7, \"\", 2, \"\"],[3, \"\", \"\", \"\", \"\", \"\", 7, 6, \"\"]]}",
                            CategoryId = 3
                        },
                        new
                        {
                            Id = 4,
                            Board = "{BoardNumber:[[\"\", 5, \"\", \"\", 1, \"\", \"\", \"\", 3],[\"\", 7, \"\", \"\", 2, \"\", 8, \"\", \"\"],[\"\", \"\", \"\", 9, 7, \"\", \"\", \"\", 4],[\"\", 2, \"\", \"\", \"\", \"\", 1, \"\", \"\"],[8, \"\", \"\", 4, \"\", \"\", 3, \"\", \"\"],[\"\", \"\", \"\", \"\", \"\", \"\", 5, \"\", \"\"],[\"\", \"\", \"\", \"\", 5, \"\", 4, 8, 6],[9, \"\", 3, \"\", \"\", \"\", 7, 1, \"\"],[4, \"\", \"\", 1, \"\", \"\", \"\", 3, \"\"]]}",
                            CategoryId = 4
                        });
                });

            modelBuilder.Entity("SudokuAPI.Models.Persistence.Sudoku", b =>
                {
                    b.HasOne("SudokuAPI.Models.Persistence.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
